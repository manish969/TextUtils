{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7867de90.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n                          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n      </nav> \r\n  )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired }\r\n\r\nNavbar.defaultProps = { title: 'Set title here', aboutText: 'About text here' };\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        //console.log(\"UpperCase was clicked\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        //console.log(\"UpperCase was clicked\" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowerercase\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        //console.log(\"UpperCase was clicked\" + text)\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text clear\", \"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        //console.log(\"OnChange\");\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const [text, setText] = useState\r\n        ('');\r\n    //text = \"new text\";  //Wrong way to change the state\r\n    //setText = (\"new text\"); //Correct way to change the state\r\n  return (\r\n    \r\n      <div className=\"container\" style={ { color: props.mode === 'dark' ? 'white' : 'black' } }>\r\n          <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={ { backgroundColor: props.mode === 'dark' ? 'grey' : 'white' } } id=\"myBox\" rows=\"8\"></textarea>\r\n              \r\n              <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n              <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n          </div>\r\n          <div className=\"container my-3\" style={ { color: props.mode === 'dark' ? 'white' : 'black' } }>\r\n              <h1>Your text summary</h1>\r\n              <p>{text.split(\"\").length} words and {text.length} characters</p>\r\n              <p>{0.008 * text.split(\"\").length} Minutes read</p>\r\n              <h2>Preview</h2>\r\n              <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  \r\n</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');  //whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    },1500)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1000);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar /> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n\n      <Alert alert={ alert } />\n\n      <div className=\"container my-3\" >\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below:\" mode={mode}/>\n            \n          {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}